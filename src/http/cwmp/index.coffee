'use strict'

{ parse, methods, createSoapEnv } = require './xml'

file = require '../file'

stage = null
device = {}
env = []
finished = false

set = (obj, key, value) ->
  attrs = key.split '.'
  for attr, i in attrs
    if i is attrs.length - 1
      obj[attr] = value
    else
      obj = obj[attr] ?= {}
  obj

request = (ip, req, res) ->
  if req.body.length > 0
    console.log '>>> REQUEST'
    console.dir [ req.headers, req.body ]

    xml = parse req.body

    element = xml['soapenv:Envelope']
    body = element['soapenv:Body']
    header = element['soapenv:Header']

    for k, v of element.attributes
      return unless k? and v?

      str = k.replace('soapenv', 'soap-env') + '=\'' + v + '\''

      if env.indexOf(str) is -1
        env.push str

    res.name = stage = Object.keys(body)[0]

    cwmp = element.attributes?['xmlns:cwmp']

    [ input, cwmpVersion ] = /urn:dslforum-org:cwmp-(\d+-\d+)/.exec(cwmp) or [ cwmp, '1-2' ]

    res.cwmpVersion = cwmpVersion.replace /-/g, '.'

    idElement = header['cwmp:ID']

    if idElement
      res.id = req.id = idElement

    for key, value of body[stage]
      res[key] = value

    if res.ParameterList?.ParameterValueStruct?
      params = res.ParameterList.ParameterValueStruct

      res.params = Object.keys(params).reduce (obj, k) ->
        set(obj, k, params[k]) if typeof params[k] is 'string'
        obj
      , {}

      device = res.params.Device or res.params.InternetGatewayDevice or {}

    res.name += 'Response'
  else if stage is 'cwmp:Inform'
    console.log '>>> EMPTY REQUEST'
    console.dir [ req.headers, req.body ]

    file = file.custom or file.sts

    res.name = 'cwmp:Download'
    res.fileType = '3 Vendor Configuration File'
    res.fileSize = file.length
    res.url = "http://#{ ip }/file.sts"

  res.env = env.join ' '

  response res

response = (res) ->
  headers =
    'Content-Type' : 'text/xml; charset="utf-8"'
    'Server' : 'ACSServer'
    'SOAPServer' : 'ACSServer'

  if res.name and methods[res.name]?
    res.id ?= '1690d26c77f0000'

    data = createSoapEnv res, headers
    code = 200

    headers['Content-Length'] = data.length

    if res.name is 'cwmp:TransferCompleteResponse'
      finished = true
    else if not finished
      code = 204
      data = null

      headers['Connection'] = "close"
      headers['Content-Length'] = 0

      console.log '<<< EMPTY RESPONSE'
      console.dir [ headers, data ]

  res.writeHead code, headers
  res.end data

module.exports = (ip) ->
  (req, res) ->
    COOKIE_REGEX = /\s*([a-zA-Z0-9\-_]+?)\s*=\s*"?([a-zA-Z0-9\-_]*?)"?\s*(,|;|$)/g

    while match = COOKIE_REGEX.exec(req.headers.cookie)
      res.id = match[2] if match[1] is 'session'

    req.body = ''

    req.on 'data', (chunk) ->
      req.body += chunk

    req.on 'end', ->
      request ip, req, res

    return
