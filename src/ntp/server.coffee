'use strict'

udp = require('dgram')
EventEmitter = require('events')
Packet = require('./packet')

class NTPServer extends EventEmitter

  constructor: (options, onRequest) ->
    super()

    if typeof options == 'function'
      onRequest = options
      options = {}

    Object.assign @, { port: 123 }, options

    @socket = udp.createSocket('udp4')
    @socket.on 'message', @parse.bind(@)

    if onRequest
      @on 'request', onRequest

    @

  listen: (port, address) ->
    @socket.bind port or @port, address
    @

  address: ->
    @socket.address()

  send: (rinfo, message, callback) ->
    if message instanceof Packet
      message.mode = Packet.MODES.SERVER
      message = message.toBuffer()

    @socket.send message, rinfo.port, rinfo.server, callback
    @

  parse: (message, rinfo) ->
    packet = Packet.parse(message)
    packet.receiveTimestamp = Date.now()

    @emit 'request', packet, @send.bind(@, rinfo)
    @

module.exports = NTPServer
